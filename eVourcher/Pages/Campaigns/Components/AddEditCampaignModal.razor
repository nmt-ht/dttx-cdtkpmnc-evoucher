@using static eVoucher.Models.DataType;
@using Game = eVoucher.Models.Game;

<Modal @ref="campaignRef">
    <ModalContent Centered Size="ModalSize.ExtraLarge">
        <ModalHeader>
            <ModalTitle>@Title</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @if (Campaign is not null)
            {
                <Field>
                    <FieldLabel>Name</FieldLabel>
                    <TextEdit @bind-Text="@Campaign.Name" Placeholder="Enter campaign name..." />
                </Field>
                <Field>
                    <FieldLabel>Description</FieldLabel>
                    <TextEdit @bind-Text="Campaign.Description" Placeholder="Enter campaign description..." />
                </Field>
                <Field>
                    <FieldLabel>Started Date</FieldLabel>
                    <DateEdit @bind-Date=Campaign.StartedDate></DateEdit>
                </Field>
                <Field>
                    <FieldLabel>Expired Date</FieldLabel>
                    <DateEdit @bind-Date=Campaign.ExpiredDate></DateEdit>
                </Field>

                <Div Display="Display.Flex">
                    <Field Class="edit-user-header">Game Information:</Field>
                    <Buttons>
                        <Button Color="Color.Primary" Clicked="@(() => GameActions(eAction.Add))">Add</Button>
                        <Button Color="Color.Secondary" Clicked="@(() => GameActions(eAction.Edit))">Edit</Button>
                        <Button Color="Color.Danger" Clicked="@(() => GameActions(eAction.Delete))">Delete</Button>
                    </Buttons>
                </Div>

                @if (Campaign.Games.Any())
                {
                    <DataGrid TItem="Game"
                      Data="@Campaign.Games"
                            Responsive
                      @bind-SelectedRow="@SelectedGame"
                      PageSize="20"
                      ShowPager="true"
                      Hoverable="true"
                      Striped="true"
                            Filterable
                      RowDoubleClicked="@(() => EditGame())">
                    <DataGridColumn Field="@nameof(Game.Index)" Caption="#" Sortable="false" />
                    <DataGridColumn Field="@nameof(Game.Name)" Caption="Name" Editable />
                    <DataGridColumn Field="@nameof(Game.Description)" Caption="Description" Editable />
                    
                    </DataGrid>
                }
                else
                {
                    <Field TextAlignment="TextAlignment.Center">The current game is empty.</Field>
                }
            }
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@UpdateData">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<AddEditGameModal @ref=addEditGameModal UpdateGameCallBack="OnUpdateGameCallBack"></AddEditGameModal>
