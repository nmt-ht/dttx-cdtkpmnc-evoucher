@page "/customer"
@using eVourcher.Services;
@using System.Linq;
@using Microsoft.AspNetCore.Components;
@using System;
@using System.Collections.Generic;
@using System.Threading.Tasks;

<PageTitle>Customer Homepage</PageTitle>


<Div Class="evoucher-header customer-header">
    <Row Display="Display.Flex">
        <Column ColumnSize="ColumnSize.Is1" Class="logo">
            <Div id="logo-row" style="display: inline-block; width: 100px; height: 100px">
                <a>
                    <img src="./images/image1.png" alt="logo" class="img-thumbnail" />
                </a>
            </Div>
        </Column>
        <Column ColumnSize="ColumnSize.Is2" Class="title">Welcome</Column>
        <Column ColumnSize="ColumnSize.Is3" Class="dropdown">
            <Dropdown>
                <Button Color="Color.Primary">Area</Button>
                <DropdownToggle Color="Color.Light" Split />
                <DropdownMenu>
                    <DropdownItem>HCMC</DropdownItem>
                    <DropdownDivider />
                    <DropdownItem>Another City</DropdownItem>
                </DropdownMenu>
            </Dropdown>
        </Column>


        <Column ColumnSize="ColumnSize.Is6" Class="customer-navigation">
            <Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
                <Items>
                    <Tab Name="sport">Sport</Tab>
                    <Tab Name="food">Food</Tab>
                    <Tab Name="drink">Drink</Tab>
                </Items>
                <Content>
                    <TabPanel Name="sport">
                        Content for sport.
                    </TabPanel>
                    <TabPanel Name="food">
                        Content for profile.
                    </TabPanel>
                    <TabPanel Name="drink">
                        Content for drink.
                    </TabPanel>
                </Content>
            </Tabs>
        </Column>
    </Row>

    <Row HorizontalGutter="32" VerticalGutter="16">
        <Column ColumnSize="ColumnSize.Is12">
            <Field>
                <Field>
                    <FieldLabel Size="Size.Big">Search Game</FieldLabel>
                    <TextEdit Placeholder="Enter game name" />
                </Field>
                <Button Color="Color.Success" Margin="Margin.Is2.FromEnd">
                    <Icon Name="IconName.Search"></Icon><Span>&nbsp; @("Search")</Span>
                    </Button>
                </Field>
            </Column>

        </Row>
        <Row Display="Display.Flex">
            <Column ColumnSize="ColumnSize.Is10">

                <DataGrid TItem="Game"
                      Responsive
                      PageSize="20"
                      ShowPager="true"
                      Hoverable="true"
                      Striped="true"
                      Filterable>
                <DataGridCommandColumn />
                <DataGridColumn Field="1" Caption="#" Sortable="false" />
                <DataGridColumn Field="1" Caption="Game Name" Editable />
                <DataGridColumn Field="1" Caption="Description" Editable />
                </DataGrid>
            <!--
                <DataGrid TItem="Game"
                      Data="@gameList"
                      @bind-SelectedRow="@selectedGame"
                      Editable
                      Responsive>
                <DataGridCommandColumn>
                    <NewCommandTemplate>
                        <Button Color="Color.Success" Clicked="@context.Clicked">New</Button>
                    </NewCommandTemplate>
                    <EditCommandTemplate>
                        <Button Color="Color.Primary" Clicked="@context.Clicked">Edit</Button>
                    </EditCommandTemplate>
                </DataGridCommandColumn>
                <DataGridColumn Field="@nameof(Game.Index)" Caption="#" Sortable="false" />
                <DataGridColumn Field="@nameof(Game.Name)" Caption="First Name" Editable />
                <DataGridColumn Field="@nameof(Game.Description)" Caption="Last Name" Editable />
                                
            </DataGrid>
            -->

            <Carousel @bind-SelectedSlide="@selectedSlide">
                <CarouselSlide Name="1">
                    <Image Source="./images/sport.jpg" Text="sport img" Display="Display.Block" Width="Width.Is100" />
                </CarouselSlide>
                <CarouselSlide Name="2">
                    <Image Source="./images/food.jpg" Text="food img" Display="Display.Block" Width="Width.Is100" />
                </CarouselSlide>
                <CarouselSlide Name="3">
                    <Image Source="./images/drink.jpg" Text="drink img" Display="Display.Block" Width="Width.Is100" />
                </CarouselSlide>
            </Carousel>
        </Column>
    </Row>
</Div>
@code {
    string selectedTab = "sport";

    private Task OnSelectedTabChanged(string name)
    {
        selectedTab = name;

        return Task.CompletedTask;
    }

    private string selectedSlide = "2";

    /*
    [Inject]
    public Game Games { get; set; }
    private List<Game> gameList;
    private Game selectedGame;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    #region Show Loading page
    [Inject] IPageProgressService PageProgressService { get; set; }
    private async Task ShowLoadingPage(bool isShow)
    {
        if (isShow)
        {
            await SetPageProgressIndeterminate();
        }
        else { await SetPageProgressHidden(); }
        StateHasChanged();
    }
    Task SetPageProgressIndeterminate()
    {
        return PageProgressService.Go(null, options => { options.Color = Color.Info; });
    }
    Task SetPageProgressHidden()
    {
        // setting it to -1 will hide the progress bar
        return PageProgressService.Go(-1);
    }
    #endregion

    private async Task LoadData()
         {
         await ShowLoadingPage(true);
         Games = await CampaignService.GetGames();
         var index = 0;
         Games.ToList().ForEach(x => x.Index = ++index);
         await ShowLoadingPage(false);
    }
    */
}
