<Modal @ref="userRef">
    <ModalContent Centered Size="ModalSize.Fullscreen" Class="add-edit-user-modal">
        <ModalHeader>
            <ModalTitle TextAlignment="TextAlignment.Center">@Title</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @if (User is not null)
            {
                <Field Class="edit-user-header">User Information:</Field>
                <Fields>
                    <Field>
                        <FieldLabel>First Name</FieldLabel>
                        <TextEdit @bind-Text="@User.FirstName" Placeholder="Enter first name..." />
                    </Field>
                    <Field>
                        <FieldLabel>Last Name</FieldLabel>
                        <TextEdit @bind-Text="User.LastName" Placeholder="Enter last name..." />
                    </Field>
                    <Field>
                        <FieldLabel>Date of Birth</FieldLabel>
                        <DateEdit TValue="DateTime?" @bind-Date=User.DateOfBirth />
                    </Field>
                </Fields>
                <Fields>
                    <Field>
                        <FieldLabel>Email address</FieldLabel>
                        <TextEdit @bind-Text="User.EmailAddress" Placeholder="Enter email address..." />
                    </Field>
                    <Field>
                        <FieldLabel>Phone number</FieldLabel>
                        <TextEdit @bind-Text="User.Phone" Placeholder="Enter phone number...">
                            <FieldHelp>Include country and area prefixes</FieldHelp>
                        </TextEdit>
                    </Field>
                </Fields>
                <Fields>
                    <Field>
                        <FieldLabel>User Name</FieldLabel>
                        <TextEdit @bind-Text="User.UserName" Placeholder="Enter user name..." />
                    </Field>
                    <Field>
                        <FieldLabel>Password</FieldLabel>
                        <TextEdit @bind-Text="User.Password" Placeholder="Enter password...">
                            <FieldHelp>Password strength: <Text TextColor="TextColor.Danger">weak</Text></FieldHelp>
                        </TextEdit>
                    </Field>
                </Fields>

                <Div Display="Display.Flex">
                    <Field Class="edit-user-header">Address Information:</Field>
                    <Buttons>
                        <Button Color="Color.Primary" Clicked="@(() => AddressActions(eAction.Add))">Add</Button>
                        <Button Color="Color.Secondary" Clicked="@(() => AddressActions(eAction.Edit))">Edit</Button>
                        <Button Color="Color.Danger" Clicked="@(() => AddressActions(eAction.Delete))">Delete</Button>
                    </Buttons>
                </Div>
                
                @if (User.Addresses.Any())
                {
                    <Table Resizable ResizeMode="TableResizeMode.Columns">
                    <TableHeader ThemeContrast="ThemeContrast.Light">
                    <TableRow>
                            <TableHeaderCell>#</TableHeaderCell>
                            <TableHeaderCell>Street</TableHeaderCell>
                            <TableHeaderCell>District</TableHeaderCell>
                            <TableHeaderCell>City</TableHeaderCell>
                            <TableHeaderCell>Country</TableHeaderCell>
                            <TableHeaderCell>Type</TableHeaderCell>
                    </TableRow>
                    </TableHeader>
                    <TableBody>
                    @{
                                var indexCounter = 0;
                                foreach (var (address, index) in User.Addresses.Select((value, i) => (value, i)))
                                {
                                    indexCounter = index + 1;
                                    <TableRow Clicked="@(() => OnSelectedAddressChanged(address))">
                                        <TableRowHeader>@(indexCounter)</TableRowHeader>
                                        <TableRowCell>@address.Street</TableRowCell>
                                        <TableRowCell>@address.District</TableRowCell>
                                        <TableRowCell>@address.City</TableRowCell>
                                        <TableRowCell>@address.Country</TableRowCell>
                                        <TableRowCell>
                                            @(eVoucher.Handlers.eVoucherHelper.GetEnumDescription(address.Type))
                                        </TableRowCell>
                                    </TableRow>
                                }
                     }
                       </TableBody>
                    </Table>
                }
                else
                {
                   <Field TextAlignment="TextAlignment.Center">The current address is empty.</Field> 
                }
            }
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@UpdateData">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<AddEditAddresModal @ref=addEditAddressModal  UpdateAddressCallBack="OnUpdateAddressCallBack"></AddEditAddresModal>