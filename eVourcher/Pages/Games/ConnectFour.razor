@using eVoucherGames.Models.ConnectFour;
@using eVoucherGames.Models.ConnectFour.Enums;

<Modal @ref="modalRef" Class="connect-four-game-modal">
    <ModalContent Centered Size="ModalSize.Large">
        <ModalHeader>
            <ModalTitle>Connect Four</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @if (board.WinningPlay == null)
            {
                <h3>@board.CurrentTurn's Turn!</h3>
            }
            else
            {
                <h3>@board.WinningPlay.WinningColor Wins!</h3>
            }

            <div class="connectfour-board">
                @for (int i = 0; i < 7; i++)
                {
                    <div class="connectfour-column">
                        @for (int j = 0; j < 6; j++)
                        {
                            int x = i;
                            int y = j;
                            var color = board.Board[i, j].Color;
                            if (color == PieceColor.Blank)
                            {
                                <div class="connectfour-gamepiece
                         connectfour-blank" @onclick="@(() => board.PieceClicked(x,y))"></div>
                            }
                            else
                            {
                                <div class="connectfour-gamepiece
                         connectfour-@color.ToString().ToLower()"
                                     style="@(board.IsGamePieceAWinningPiece(i, j)? "opacity: 0.6" : "")"></div>
                            }
                        }
                    </div>
                }
            </div>
        </ModalBody>
        <ModalFooter>
            <Button Display="@(board.WinningPlay is not null ? Display.Block : Display.None)" class="btn btn-success" @onclick="@(OnResetGame)">Reset</Button>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>